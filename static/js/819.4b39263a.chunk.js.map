{"version":3,"file":"static/js/819.4b39263a.chunk.js","mappings":"kQAEaA,EAAYC,EAAAA,GAAAA,IAAH,sFAMTC,EAASD,EAAAA,GAAAA,OAAH,+GAONE,EAAYF,EAAAA,GAAAA,GAAH,sBAETG,EAAOH,EAAAA,GAAAA,GAAH,4RAEN,SAACI,GAAD,OAAWA,EAAMC,MAAMC,WAWnB,SAACF,GAAD,OAAWA,EAAMC,MAAME,eAUzBC,GALQR,EAAAA,GAAAA,GAAH,2DAEP,SAACI,GAAD,OAAWA,EAAMC,MAAME,eAGZP,EAAAA,GAAAA,KAAH,mEAKNS,EAAMT,EAAAA,GAAAA,IAAH,gF,SCWhB,EAvCc,WACZ,OAA4BU,EAAAA,EAAAA,UAAkB,WAAYC,EAAAA,IAAlDC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAGnB,OAFAC,QAAQC,IAAI,aAAcF,IAGxB,UAACd,EAAD,YACE,SAACiB,EAAA,EAAD,WACE,+CAEF,SAACf,EAAD,WACE,8CAEDW,GACC,SAACJ,EAAD,WACE,SAAC,IAAD,OAGF,SAACN,EAAD,iBACGW,QADH,IACGA,OADH,EACGA,EAAMI,MAAM,EAAG,KAAKC,KAAI,SAACC,GAAD,OACvB,SAAChB,EAAD,WACE,UAAC,KAAD,CACEiB,GAAI,CACFC,SAAS,IAAD,OAAMF,EAAKG,KAErBC,MAAO,CAAEC,KAAML,EAAKK,MAJtB,WAME,SAACf,EAAD,CACEgB,IAAG,qDAAgDN,EAAKO,OAAOC,iBAEhER,EAAKK,KATR,cADSL,EAAKG,c,sJCpCtBM,EAAQ,iCAEDjB,EAAU,yCAAG,yGACMkB,MAAM,GAAD,OAAID,EAAJ,WADX,8BACkCE,OADlC,cAClBC,EADkB,yBAEjBA,GAFiB,2CAAH,qDAKVC,EAAa,yCAAG,WAAOC,GAAP,sFACPJ,MAAM,GAAD,OAAID,EAAJ,kBAAsBK,IADpB,8BAC+BH,OAD/B,mFAAH,sDAUnB,SAASI,EAAiBD,GAC/B,OAAOJ,MAAM,GAAD,OAAID,EAAJ,oBAAwBK,IAAUE,MAAK,SAACJ,GAAD,OACjDA,EAASD,UAIN,SAASM,EAAiBH,GACfI,KAAKC,MAAMC,KAAKC,MAAQ,KAExC,OAAOX,MAAM,qDAAD,OAC2CI,IACrDE,MAAK,SAACJ,GAAD,OAAcA,EAASD","sources":["components/styledComponents/coins.tsx","components/coins.tsx","utils/api.ts"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CoinsList = styled.ul``;\r\n\r\nexport const Coin = styled.li`\r\n  background-color: white;\r\n  color: ${(props) => props.theme.bgColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-out;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nexport const Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchCoins } from \"@utils/api\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\n\r\nimport { ICoin } from \"@models/coins\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  CoinsList,\r\n  Coin,\r\n  Title,\r\n  Loader,\r\n  Img,\r\n} from \"@components/styledComponents/coins\";\r\n\r\nconst Coins = () => {\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n  console.log(\"data7879: \", data);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>코인</title>\r\n      </Helmet>\r\n      <Header>\r\n        <title>코인</title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>\r\n          <RingLoader />\r\n        </Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}`,\r\n                }}\r\n                state={{ name: coin.name }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Coins;\r\n","const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport const fetchCoins = async () => {\r\n  const response = await (await fetch(`${BASE_URL}/coins`)).json();\r\n  return response;\r\n};\r\n\r\nexport const fetchCoinInfo = async (coinId?: string) => {\r\n  return await (await fetch(`${BASE_URL}/coins/${coinId}`)).json();\r\n};\r\n\r\n// export function fetchCoinInfo(coinId: string) {\r\n//   return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n//     response.json()\r\n//   );\r\n// }\r\n\r\nexport function fetchCoinTickers(coinId?: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `https://ohlcv-api.nomadcoders.workers.dev/?coinId=${coinId}`\r\n  ).then((response) => response.json());\r\n}\r\n"],"names":["Container","styled","Header","CoinsList","Coin","props","theme","bgColor","accentColor","Loader","Img","useQuery","fetchCoins","isLoading","data","console","log","Helmet","slice","map","coin","to","pathname","id","state","name","src","symbol","toLowerCase","BASE_URL","fetch","json","response","fetchCoinInfo","coinId","fetchCoinTickers","then","fetchCoinHistory","Math","floor","Date","now"],"sourceRoot":""}