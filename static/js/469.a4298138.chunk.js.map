{"version":3,"file":"static/js/469.a4298138.chunk.js","mappings":"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","sources":["atoms/memosAtom.ts","components/styledComponents/coin.tsx","components/coin.tsx","components/memoForm.tsx","components/styledComponents/memos.tsx","utils/api.ts","../node_modules/react-spinners/esm/helpers/unitConverter.js","../node_modules/react-spinners/esm/helpers/proptypes.js","../node_modules/react-spinners/esm/RingLoader.js"],"sourcesContent":["import { atom, selector } from \"recoil\";\r\n\r\nexport enum MemoState {\r\n  \"planingToBuy\" = \"PlaningToBuy\",\r\n  \"completedDeal\" = \"CompletedDeal\",\r\n}\r\n\r\nexport interface IMemos {\r\n  id: number; // 메모아이디.. 날짜 -> 최초 입력 시 날짜 -> 숫자로 컨버팅\r\n  text: string; // 메모한것\r\n  buyPrice: number; // 구입 가격\r\n  coinNumber: number; // 구입 갯수\r\n  targetPrice: number; // 목표 가격\r\n  sellPrice?: number; // 판 가격\r\n  coinType: string; // 코인타입\r\n  writedAt: number; // 최초 작성날짜\r\n  memoState: MemoState; // 메모 상태\r\n  modifiedAt?: number; // 마지막 수정날짜\r\n  isModified: boolean; // 1회 이상 수정 시 true 처리\r\n}\r\n\r\n// 전체 메모정보\r\nexport const memosState = atom<IMemos[]>({\r\n  key: \"memosState\",\r\n  default: [],\r\n});\r\n\r\n// 현재 위치한 코인페이지\r\nexport const currentCoinPage = atom<string | null>({\r\n  key: \"currentCoinPage\",\r\n  default: null,\r\n});\r\n\r\n// 코인 타입 리스트 모음\r\nexport const coinListState = atom<string[] | null>({\r\n  key: \"coinListState\",\r\n  default: null,\r\n});\r\n\r\n// 현재 코인 페이지의 코인 목록만 가져옮\r\nexport const getOneCoinMemos = selector({\r\n  key: \"getOneCoinMemos\",\r\n  get: ({ get }) => {\r\n    const allMemos = get(memosState);\r\n    const currentPage = get(currentCoinPage);\r\n    return allMemos.filter((item) => item.coinType === currentPage);\r\n  },\r\n});\r\n\r\n// 전체 코인을 코인 타입으로 나누고, 메모 상태로 구분하여 보여준다\r\nexport const getAllCoinMemos = selector({\r\n  key: \"getAllCoinMemos\",\r\n  get: ({ get }) => {\r\n    const allMemos = get(memosState);\r\n    // 코인타입리스트 불러오기\r\n    const coinTypeList = allMemos?.map((item) => item.coinType);\r\n  },\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nexport const Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 33%;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nexport const Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n`;\r\n\r\n// styled 컴포넌트의 input type 은 아래와 같이 지정한다.\r\nexport const Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    padding: 7px 0px;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 0.5em;\r\n  border-radius: 6px;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n  useNavigate,\r\n  useLocation,\r\n  useParams,\r\n  Link,\r\n  Outlet,\r\n} from \"react-router-dom\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"@utils/api\";\r\nimport {\r\n  Title,\r\n  Loader,\r\n  Container,\r\n  Header,\r\n  Overview,\r\n  OverviewItem,\r\n  Description,\r\n  Tab,\r\n  Tabs,\r\n  Button,\r\n} from \"@components/styledComponents/coin\";\r\nimport { RouteParams, RouteState, InfoData, PriceData } from \"@models/coin\";\r\nimport { RingLoader } from \"react-spinners\";\r\nimport MemoForm from \"@components/memoForm\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport { currentCoinPage, getOneCoinMemos } from \"@atoms/memosAtom\";\r\n\r\nconst Coin = () => {\r\n  const navigate = useNavigate();\r\n  const setCurrentCoinName = useSetRecoilState(currentCoinPage);\r\n  const { coinId } = useParams() as RouteParams; // V6 는 useParams 의 타입이 string | undefined 인지 알아서 체크해준다.\r\n  const { state, pathname } = useLocation() as RouteState;\r\n  console.log(\"pathname: \", pathname);\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"infos\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n  const loading = infoLoading || tickersLoading;\r\n\r\n  // useEffect for setCuurentCoinPage (메모에 입력한 코인 만 불러오기 위함..)\r\n  useEffect(() => {\r\n    //@ts-ignore\r\n    if (infoData) {\r\n      setCurrentCoinName(infoData?.name);\r\n    }\r\n  }, [infoData]);\r\n\r\n  const onClicktoList = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Helmet>\r\n          <title>\r\n            {state?.name\r\n              ? state.name\r\n              : loading\r\n              ? \"Loading... \"\r\n              : infoData?.name}\r\n          </title>\r\n        </Helmet>\r\n        <Header>\r\n          <Button onClick={onClicktoList}>뒤로가기</Button>\r\n          <Title>\r\n            {state?.name\r\n              ? state.name\r\n              : loading\r\n              ? \"Loading... \"\r\n              : infoData?.name}\r\n          </Title>\r\n        </Header>\r\n        {loading ? (\r\n          <Loader>\r\n            <RingLoader />\r\n          </Loader>\r\n        ) : (\r\n          <>\r\n            <Overview>\r\n              <OverviewItem>\r\n                <span>Rank:</span>\r\n                <span>{infoData?.rank}</span>\r\n              </OverviewItem>\r\n              <OverviewItem>\r\n                <span>Symbol:</span>\r\n                <span>{`${infoData?.symbol}`}</span>\r\n              </OverviewItem>\r\n              <OverviewItem>\r\n                <span>Price:</span>\r\n                <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\r\n              </OverviewItem>\r\n            </Overview>\r\n            <Description>{infoData?.description}</Description>\r\n            <Overview>\r\n              <OverviewItem>\r\n                <span>Total Suply:</span>\r\n                <span>{tickersData?.max_supply}</span>\r\n              </OverviewItem>\r\n            </Overview>\r\n\r\n            <Tabs>\r\n              <Tab isActive={pathname === `/${coinId}/chart`}>\r\n                <Link to={`/${coinId}/chart`}>Chart</Link>\r\n              </Tab>\r\n              <Tab isActive={pathname === `/${coinId}/price`}>\r\n                <Link to={`/${coinId}/price`}>Price</Link>\r\n              </Tab>\r\n            </Tabs>\r\n            <Outlet />\r\n            {infoData && <MemoForm coinName={infoData?.name} />}\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Coin;\r\n","import { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { coinListState, memosState, MemoState } from \"@atoms/memosAtom\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\nimport { IMemos } from \"@atoms/memosAtom\";\r\nimport { FormBox, FromItem, Button } from \"@components/styledComponents/memos\";\r\n\r\nconst MemoForm = ({ coinName }: { coinName: string | null }) => {\r\n  const [coinNameList, setCoinNameList] = useRecoilState(coinListState);\r\n  const setMemoState = useSetRecoilState(memosState);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm<IMemos>();\r\n\r\n  const onSubmit: SubmitHandler<IMemos> = (data) => {\r\n    console.log(\"SubmitData: \", data);\r\n    setMemoState((prev) =>\r\n      prev.concat({\r\n        id: Date.now(),\r\n        text: data.text,\r\n        buyPrice: data.buyPrice,\r\n        coinType: data.coinType,\r\n        coinNumber: data.coinNumber,\r\n        targetPrice: data.targetPrice,\r\n        writedAt: Date.now(),\r\n        memoState: MemoState.planingToBuy,\r\n        isModified: false,\r\n      })\r\n    );\r\n    reset();\r\n  };\r\n\r\n  // const onSelectCoinName = (event: FormEvent<HTMLSelectElement>) => {\r\n  //   const { value } = event.currentTarget;\r\n  // };\r\n\r\n  return (\r\n    <FormBox onSubmit={handleSubmit(onSubmit)}>\r\n      <FromItem>\r\n        <span>Select Coin: </span>\r\n        <span>\r\n          {coinNameList && coinNameList?.length > 0 ? (\r\n            <select\r\n              defaultValue={coinName === null ? coinNameList[0] : coinName}\r\n              disabled={coinName === null ? false : true}\r\n              {...register(\"coinType\", { required: \"You have to Select one\" })}\r\n            >\r\n              {coinNameList.map((coinName) => (\r\n                <option key={coinName} value={coinName}>\r\n                  {coinName}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          ) : (\r\n            <>there is no coinNameList</>\r\n          )}\r\n        </span>\r\n      </FromItem>\r\n\r\n      <FromItem>\r\n        <span>Buy Price: </span>\r\n        <span>\r\n          <input\r\n            {...register(\"buyPrice\", {\r\n              valueAsNumber: true,\r\n              required: \"only positive Number Available\",\r\n              validate: {\r\n                positive: (value) => value > 0,\r\n              },\r\n            })}\r\n          />\r\n        </span>\r\n        <p>{errors.buyPrice?.message}</p>\r\n      </FromItem>\r\n\r\n      <FromItem>\r\n        <span>Target Price: </span>\r\n        <span>\r\n          <input\r\n            {...register(\"targetPrice\", {\r\n              valueAsNumber: true,\r\n              required: \"only positive Number Available\",\r\n              validate: {\r\n                positive: (value) => value > 0,\r\n              },\r\n            })}\r\n          />\r\n        </span>\r\n        <p>{errors.targetPrice?.message}</p>\r\n      </FromItem>\r\n\r\n      <FromItem>\r\n        <span>Coin Number To Buy: </span>\r\n        <span>\r\n          <input\r\n            {...register(\"coinNumber\", {\r\n              valueAsNumber: true,\r\n              required: \"only positive Number Available\",\r\n              validate: {\r\n                positive: (value) => value > 0,\r\n              },\r\n            })}\r\n          />\r\n        </span>\r\n        <p>{errors.coinNumber?.message}</p>\r\n      </FromItem>\r\n\r\n      <FromItem>\r\n        <span>Memo for your Trade</span>\r\n        <span>\r\n          <textarea\r\n            {...register(\"text\", {\r\n              required: \"write at least one letter\",\r\n              validate: {\r\n                letter: (value) =>\r\n                  value.trim().length === 0\r\n                    ? \"write at least one letter\"\r\n                    : true,\r\n              },\r\n            })}\r\n          />\r\n        </span>\r\n        <p>{errors.text?.message}</p>\r\n      </FromItem>\r\n      <FromItem>\r\n        <Button>Submit</Button>\r\n      </FromItem>\r\n    </FormBox>\r\n  );\r\n};\r\n\r\nexport default MemoForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const MemoList = styled.ul``;\r\n\r\nexport const Memo = styled.li`\r\n  background-color: ${(props) => props.theme.textColor};\r\n  color: ${(props) => props.theme.bgColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Title = styled.span`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.textColor};\r\n`;\r\n\r\nexport const Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nexport const Input = styled.input``;\r\n\r\nexport const Textarea = styled.textarea``;\r\n\r\nexport const Button = styled.button`\r\n  padding: 0.5em;\r\n  border-radius: 6px;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n`;\r\n\r\nexport const FormBox = styled.form`\r\n  display: block;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const FromItem = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  align-content: center;\r\n  width: 80%;\r\n  margin-top: 10px;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-top: 5px;\r\n    margin-left: 10px;\r\n    margin-bottom: 5px;\r\n  }\r\n  span:last-child {\r\n    margin-left: 10px;\r\n    /* margin-top: 5px; */\r\n  }\r\n  p {\r\n    color: ${(props) => props.theme.textColor};\r\n    font-size: 10px;\r\n  }\r\n`;\r\n","const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport const fetchCoins = async () => {\r\n  const response = await (await fetch(`${BASE_URL}/coins`)).json();\r\n  return response;\r\n};\r\n\r\nexport const fetchCoinInfo = async (coinId?: string) => {\r\n  return await (await fetch(`${BASE_URL}/coins/${coinId}`)).json();\r\n};\r\n\r\n// export function fetchCoinInfo(coinId: string) {\r\n//   return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n//     response.json()\r\n//   );\r\n// }\r\n\r\nexport function fetchCoinTickers(coinId?: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `https://ohlcv-api.nomadcoders.workers.dev/?coinId=${coinId}`\r\n  ).then((response) => response.json());\r\n}\r\n","var cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nexport function parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\"\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit\n        };\n    }\n    console.warn(\"React Spinners: \" + size + \" is not a valid css value. Defaulting to \" + value + \"px.\");\n    return {\n        value: value,\n        unit: \"px\"\n    };\n}\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nexport function cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\" + lengthWithunit.value + lengthWithunit.unit;\n}\n","/*\n * DefaultProps object for different loaders\n */\nvar commonValues = {\n    loading: true,\n    color: \"#000000\",\n    css: \"\",\n    speedMultiplier: 1\n};\nexport function sizeDefaults(sizeValue) {\n    return Object.assign({}, commonValues, { size: sizeValue });\n}\nexport function sizeMarginDefaults(sizeValue) {\n    return Object.assign({}, sizeDefaults(sizeValue), {\n        margin: 2\n    });\n}\nexport function heightWidthDefaults(height, width) {\n    return Object.assign({}, commonValues, {\n        height: height,\n        width: width\n    });\n}\nexport function heightWidthRadiusDefaults(height, width, radius) {\n    if (radius === void 0) { radius = 2; }\n    return Object.assign({}, heightWidthDefaults(height, width), {\n        radius: radius,\n        margin: 2\n    });\n}\n","var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n/** @jsxImportSource @emotion/react */\nimport * as React from \"react\";\nimport { keyframes, css } from \"@emotion/react\";\nimport { sizeDefaults, parseLengthAndUnit, cssValue } from \"./helpers\";\nvar right = keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  0% {transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg)}\\n  100% {transform: rotateX(180deg) rotateY(360deg) rotateZ(360deg)}\\n\"], [\"\\n  0% {transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg)}\\n  100% {transform: rotateX(180deg) rotateY(360deg) rotateZ(360deg)}\\n\"])));\nvar left = keyframes(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  0% {transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg)}\\n  100% {transform: rotateX(360deg) rotateY(180deg) rotateZ(360deg)}\\n\"], [\"\\n  0% {transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg)}\\n  100% {transform: rotateX(360deg) rotateY(180deg) rotateZ(360deg)}\\n\"])));\nvar Loader = /** @class */ (function (_super) {\n    __extends(Loader, _super);\n    function Loader() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.getSize = function () {\n            return _this.props.size;\n        };\n        _this.style = function (i) {\n            var _a = _this.props, color = _a.color, speedMultiplier = _a.speedMultiplier;\n            var _b = parseLengthAndUnit(_this.getSize()), value = _b.value, unit = _b.unit;\n            return css(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      width: \", \";\\n      height: \", \";\\n      border: \", \" solid \", \";\\n      opacity: 0.4;\\n      border-radius: 100%;\\n      animation-fill-mode: forwards;\\n      perspective: 800px;\\n      animation: \", \" \", \"s 0s infinite linear;\\n    \"], [\"\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      width: \", \";\\n      height: \", \";\\n      border: \", \" solid \", \";\\n      opacity: 0.4;\\n      border-radius: 100%;\\n      animation-fill-mode: forwards;\\n      perspective: 800px;\\n      animation: \", \" \", \"s 0s infinite linear;\\n    \"])), \"\" + value + unit, \"\" + value + unit, \"\" + value / 10 + unit, color, i === 1 ? right : left, 2 / speedMultiplier);\n        };\n        _this.wrapper = function () {\n            return css(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n      width: \", \";\\n      height: \", \";\\n      position: relative;\\n    \"], [\"\\n      width: \", \";\\n      height: \", \";\\n      position: relative;\\n    \"])), cssValue(_this.getSize()), cssValue(_this.getSize()));\n        };\n        return _this;\n    }\n    Loader.prototype.render = function () {\n        var _a = this.props, loading = _a.loading, css = _a.css;\n        return loading ? (_jsxs(\"span\", __assign({ css: [this.wrapper(), css] }, { children: [_jsx(\"span\", { css: this.style(1) }, void 0), _jsx(\"span\", { css: this.style(2) }, void 0)] }), void 0)) : null;\n    };\n    Loader.defaultProps = sizeDefaults(60);\n    return Loader;\n}(React.PureComponent));\nexport default Loader;\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4;\n"],"names":["MemoState","memosState","atom","key","default","currentCoinPage","coinListState","selector","get","allMemos","currentPage","filter","item","coinType","map","Title","styled","props","theme","accentColor","Loader","Container","Header","Overview","OverviewItem","Description","Tabs","Tab","isActive","textColor","Button","bgColor","navigate","useNavigate","setCurrentCoinName","useSetRecoilState","coinId","useParams","useLocation","state","pathname","console","log","useQuery","fetchCoinInfo","infoLoading","isLoading","infoData","data","fetchCoinTickers","refetchInterval","tickersLoading","tickersData","loading","useEffect","name","Helmet","onClick","RingLoader","rank","symbol","quotes","USD","price","toFixed","description","max_supply","to","coinName","useRecoilState","coinNameList","setMemoState","useForm","register","handleSubmit","errors","formState","reset","onSubmit","prev","concat","id","Date","now","text","buyPrice","coinNumber","targetPrice","writedAt","memoState","isModified","length","defaultValue","disabled","required","value","valueAsNumber","validate","positive","message","letter","trim","FormBox","FromItem","BASE_URL","fetchCoins","fetch","json","response","then","fetchCoinHistory","Math","floor","cssUnit","cm","mm","in","px","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","parseLengthAndUnit","size","unit","valueString","match","toString","includes","parseFloat","parseInt","warn","cssValue","lengthWithunit","commonValues","color","css","speedMultiplier","sizeDefaults","sizeValue","Object","assign","templateObject_1","templateObject_2","templateObject_3","templateObject_4","__makeTemplateObject","cooked","raw","defineProperty","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","__assign","t","s","i","n","arguments","apply","right","keyframes","left","_super","_this","getSize","style","_a","_b","wrapper","render","_jsxs","children","_jsx","defaultProps","React"],"sourceRoot":""}